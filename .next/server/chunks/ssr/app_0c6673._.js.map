{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nanac/client/app/%7Bcomponents%7D/Header/index.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ntype HeaderProps = {\r\n    name: string\r\n}\r\n\r\nconst Header = ({ name}: HeaderProps) => {\r\n  return (\r\n    <div className=\"text-2xl font-semibold text-gray-700\">{name}</div>\r\n  )\r\n}\r\n\r\nexport default Header"],"names":[],"mappings":";;;;;AAMA,MAAM,SAAS,CAAC,EAAE,IAAI,EAAc;IAClC,qBACE,8OAAC;QAAI,WAAU;kBAAwC;;;;;;AAE3D;uCAEe"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nanac/client/app/inventory/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useGetProductsQuery } from \"@/state/api\";\r\nimport Header from \"@/app/{components}/Header\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: \"productId\", headerName: \"ID\", width: 90 },\r\n  { field: \"name\", headerName: \"Product Name\", width: 200 },\r\n  {\r\n    field: \"price\",\r\n    headerName: \"Price\",\r\n    width: 110,\r\n    type: \"number\",\r\n    valueGetter: (value, row) => (row.price ? `â‚µ${row.price}` : \"N/A\"),\r\n  },\r\n  {\r\n    field: \"rating\",\r\n    headerName: \"Rating\",\r\n    width: 110,\r\n    type: \"number\",\r\n    valueGetter: (value, row) => (row.rating ? row.rating : \"N/A\"),\r\n  },\r\n  {\r\n    field: \"stockQuantity\",\r\n    headerName: \"Stock Quantity\",\r\n    width: 110,\r\n    type: \"number\",\r\n    valueGetter: (value, row) => (row.stockQuantity ? row.stockQuantity : \"N/A\"),\r\n  },\r\n  { field: \"description\", headerName: \"Description\", width: 200 },\r\n];\r\n\r\nconst Inventory = () => {\r\n  const { data: products, isError, isLoading } = useGetProductsQuery();\r\n\r\n  if (isLoading) {\r\n    return <div className=\"py-4\">Loading...</div>;\r\n  }\r\n  if (isError || !products) {\r\n    return (\r\n      <div className=\"text-center text-red-500 py-4 font-semibold text-xl\">\r\n        Error! Failed to fetch Products\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <Header name=\"Inventory\" />\r\n      <DataGrid\r\n        rows={products}\r\n        columns={columns}\r\n        getRowId={(row) => row.productId}\r\n        checkboxSelection\r\n        className=\"bd-white shadow rounded-lg border border-gray-200 mt-5 !text-gray-700\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inventory;"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,MAAM,UAAwB;IAC5B;QAAE,OAAO;QAAa,YAAY;QAAM,OAAO;IAAG;IAClD;QAAE,OAAO;QAAQ,YAAY;QAAgB,OAAO;IAAI;IACxD;QACE,OAAO;QACP,YAAY;QACZ,OAAO;QACP,MAAM;QACN,aAAa,CAAC,OAAO,MAAS,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,KAAK,EAAE,GAAG;IAC9D;IACA;QACE,OAAO;QACP,YAAY;QACZ,OAAO;QACP,MAAM;QACN,aAAa,CAAC,OAAO,MAAS,IAAI,MAAM,GAAG,IAAI,MAAM,GAAG;IAC1D;IACA;QACE,OAAO;QACP,YAAY;QACZ,OAAO;QACP,MAAM;QACN,aAAa,CAAC,OAAO,MAAS,IAAI,aAAa,GAAG,IAAI,aAAa,GAAG;IACxE;IACA;QAAE,OAAO;QAAe,YAAY;QAAe,OAAO;IAAI;CAC/D;AAED,MAAM,YAAY;IAChB,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,4GAAA,CAAA,sBAAmB,AAAD;IAEjE,IAAI,WAAW;QACb,qBAAO,8OAAC;YAAI,WAAU;sBAAO;;;;;;IAC/B;IACA,IAAI,WAAW,CAAC,UAAU;QACxB,qBACE,8OAAC;YAAI,WAAU;sBAAsD;;;;;;IAIzE;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,yIAAA,CAAA,UAAM;gBAAC,MAAK;;;;;;0BACb,8OAAC,kKAAA,CAAA,WAAQ;gBACP,MAAM;gBACN,SAAS;gBACT,UAAU,CAAC,MAAQ,IAAI,SAAS;gBAChC,iBAAiB;gBACjB,WAAU;;;;;;;;;;;;AAIlB;uCAEe"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}